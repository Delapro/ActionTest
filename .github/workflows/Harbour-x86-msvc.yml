# Fassung für Microsoft C++ Compiler 32-Bit VS2019
# Achtung es gibt bitbucket-Abhängigkeiten! https://bitbucket.org/lorenzodla...
name: Harbour for Windows 32 using MSVC

on:
  # push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:  

jobs:
  build:
    runs-on: windows-2019  # früher: windows-latest
    
    if: github.actor == github.event.repository.owner.login
    
    steps:
    - uses: actions/checkout@v4    # bezieht sich auf https://github.com/actions/checkout/releases/tag/v4
    
    - name: Checkout harbour/core repo
      uses: actions/checkout@v4
      with:
       repository: harbour/core
       path: harbour

#    - name: Install dependencies
#      run: |
#         (new-object System.Net.WebClient).DownloadFile('https://bitbucket.org/lorenzodla/mod_harbour_actions_resources/downloads/OpenSSL-Win32.zip', 'C:\temp\OpenSSL-Win32.zip')
#         Expand-Archive -LiteralPath C:\temp\OpenSSL-Win32.zip -DestinationPath C:\OpenSSL -Force
#         (new-object System.Net.WebClient).DownloadFile('https://bitbucket.org/lorenzodla/mod_harbour_actions_resources/downloads/curl-7.54.0-win32-mingw.zip', 'C:\temp\curl-7.54.0-win32-mingw.zip')
#         Expand-Archive -LiteralPath C:\temp\curl-7.54.0-win32-mingw.zip -DestinationPath C:\curl -Force

    - name: Installing dependencies
      shell: cmd 
      run: |
        vcpkg.exe install curl --triplet x86-windows
        vcpkg.exe install openssl --triplet x86-windows
        vcpkg integrate install
        
    - name: Compile Harbour
      shell: cmd
      run: |
        cd harbour
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86
        set HB_BUILD_MODE=c
        set HB_USER_PRGFLAGS=-l-
        set HB_BUILD_CONTRIBS=
        set HB_WITH_OPENSSL=C:\OpenSSL\include
        set HB_WITH_CURL=C:\curl\include
        set HB_STATIC_OPENSSL=yes
        set HB_STATIC_CURL=yes
        set HB_COMPILER=msvc
        win-make.exe
        
    - name: Create output folders
      shell: cmd
      run: |
        mkdir output
        mkdir output\bin
        copy harbour\bin\win\msvc\*.exe output\bin
        mkdir output\lib
        copy harbour\lib\win\msvc\*.lib output\lib
        mkdir output\include 
        copy harbour\include output\include

    - name: Set Date Variable
      id: current-date
      shell: pwsh
      # Hinweis zum Durchreichen von Variablen: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-setting-a-value
      run: |
        # beachten: https://github.com/Delapro/ActionTest/blob/f21d421fbc2dd84db67b56b6879803542888b30f/.github/workflows/Harbour-x64-msvc.yml#L69
        echo "DATE=$(get-date -Format 'yyyy_MM_dd')" >> $env:GITHUB_OUTPUT
      
    - name: Upload Harbour to artifact
      uses: actions/upload-artifact@v4
      with:
        name: harbour_win32_msvc_${{ steps.current-date.outputs.DATE }}.zip
        path: output
